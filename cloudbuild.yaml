steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:latest', '.']

  # Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:latest']

  # Deploy the image to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [ 'set', 'image', 'deployment/my-app', 'sample-gke=gcr.io/${_PROJECT_ID}/sample-gke:latest' ]
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=y${_REGION}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=gke-autopilot-cluster-1'

images:
  - 'gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:latest'

options:
  machineType: 'E2_HIGHCPU_8'
  logging: LEGACY
  logStreamingOption: STREAM_ON
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET

substitutions:
  _PROJECT_ID: burner-tanazad1
  _REGION: us-central1-a
  _IMAGE_NAME: sample-gke
  _REPO_NAME: dev-spring-boot-gke-repo-01
  _SERVICE_NAME: sample-gke
  _VERSION: v1.0
  _AUTH: --allow-unauthenticated
  _VPC_CONN: dev-spring-boot-gke-repo-01
  _TRAFFIC: all-traffic
  _TIME_O: timeout=3600
  _MEMORY: 1024Mi